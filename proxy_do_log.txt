












1) создаем проектик в идее [idea]
  - создаем папку для хранения проектика
  - создаем новый проект [File->new project]
  - выбираем [Maven] (*) архитип [javafx-basic-archetype]
    - groupId    == com.zenjava
    - artifactId == javafx-basic-archetype
    - version    == 8.1.5
  - ставим артифакты:
    - GroupId    [ ru.doneathome ]
    - ArtifactId [ proxy ]
    - Version    [ 1.0.0 ]
- имя проектика [ proxy ]



2) (1/5) хотим создать форму GUI
  - посмотрели что есть [swing] но ему на смену пришел [javaFX]
  - создаем файл [*.fxml] + создаем класс контроллек, который в файле указываем
    - (*) учебник [ http://code.makery.ch/library/javafx-8-tutorial/ru/part1/ ]
    - [*] поставили в файле тип панели [ AnchorPane ]
    - (*) это панель с жесткой привязкой компонентов по координатам
  - пишем простой текстик:
    [
      <Button text="Say 'Hello World'" onAction="#sayHelloWorld"/>
      <Label GridPane.rowIndex="1" fx:id="helloWorld"/>
    ]
  - жмем [Alt+Enter] жмем и можем сгенерить поле/метод в контроллере
  - добавили еще файл стилей [stylesheets="/ru/doneathome/css/sample.css"]


2) (2/5) хотим создать форму GUI
  - можно установить [Scene Builder] и через него в IDEA открывать [*.fxml]
    - качаем [http://gluonhq.com/products/scene-builder/#download *.deb] (*) GWON
    - поставили для [java9] поставим еще восьмую [java8]
    - (*) [ sudo apt install ./ ]
    - ПМК на [*.fxml] выбираем открыть в [SceneBuilder] 
      - (*) указываем установленный проект в [/opt/SceneBuilder]

3) (3/5) хотим создать форму GUI
  - начинаем идти по урокам [http://code.makery.ch/library/javafx-8-tutorial/ru/part1/]
  - (*) главной панелью будет [AnchorPane]
    - выпаскиваем панель [SplitPane]
    - теперь добавляем две панели [AnchorPane] на [SplitPane]
    - (*)

  - в корневой панели надо привязать контроллер к форме[fx:controller="ru.doneathome.forms.mainController"]
    - сделали через [SceneBuilder] идем в [Document]->[Controller]->[Controller class]
  - для привязки из формы [*.fxml] в контроллек добавляем:
    - [ fx:id="root" ] (*) теперь можем создать такое поле в контроллере
    - [ onAction="#doCreate" ] (*) теперь можем добавить обработчик события
      - (*) [onAction] - это один из видов события

  - для того чтобы в [*.jar] был виден файл стилей поставиил полный путь и относительный для отладки
    - [ ... stylesheets="/ru/doneathome/css/sample.css" ... ]
    - [ ... ... ]

  - в [pom.xml] мы добавили плагин, чтоб файл манифеста клался куда надо

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.0.2</version>
                <configuration>
                    <archive>
                        <manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
                    </archive>
                </configuration>
            </plugin>
        </plugins>
    </build>

  - проэкт компилился на java 1.5 [ lambda expressions are not supported in -source 1.5 ]
    - добавили проперти:
      [
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
      ]
    - поменяли настройки проекта , везде указав что брать версию в зависимости от JDK
      - (*) File->project Structure->Project
      - (*) File->project Structure->Modules


3) хотим отладить основной ф-ионал сервера
  - как запустить свой сервер в [linux]?
    - [ nc -k -l 4444 ] заняли 4444 порт
    - (*) закрыть [ telnet ] -> "ctrl X" или "ctrl ]" потом "q"
